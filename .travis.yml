language: cpp

matrix:
  include:
    - os: linux
      env:
        - BUILD_TYPE=linux
        - CC=gcc-8
        - CXX=g++-8
      compiler: gcc-8
      addons:
        apt:
          config:
            retries: true
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - cmake
            - zlib1g-dev
            - gtk+-3.0
            - openssl
            # Boost, Lua and SDL2 library versions provided are too old, they must be compiled manually.
    - os: osx
      osx_image: xcode11.3
      env:
        - BUILD_TYPE=osx
        - OPENSSL_ROOT_DIR=/usr/local/opt/openssl/
      compiler: clang

env:
  global:
    - SDL_VIDEODRIVER=dummy
    - SDL_AUDIODRIVER=disk
    - MAKEFLAGS=-j8

cache:
  directories:
    - $HOME/.ccache
    - $HOME/download

before_install:
  - if [[ "$BUILD_TYPE" == "osx" ]]; then
      brew update &&
      brew upgrade cmake boost wget &&
      brew install sdl2 sdl2_ttf sdl2_image sdl2_mixer lua openssl;
    fi
  - if [[ "$BUILD_TYPE" == "linux" ]]; then
      gcc -v && g++ -v;
      sudo ln -s /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 /usr/lib/libGL.so;
    fi
  - if [[ "$BUILD_TYPE" == "linux" ]]; then . "$TRAVIS_BUILD_DIR/.travis/before_install.sh"; fi

install:
  - if [[ "$BUILD_TYPE" == "linux" ]]; then
      gcc -v && g++ -v;
    fi
  - if [[ "$BUILD_TYPE" == "linux" ]]; then . "$TRAVIS_BUILD_DIR/.travis/install.sh"; fi

before_script:

script:
  - cd "$TRAVIS_BUILD_DIR";
  - if [[ "$BUILD_TYPE" == "linux" ]]; then
      export LD_LIBRARY_PATH="/usr/lib:$LD_LIBRARY_PATH";
      export LD_RUN_PATH="/usr/lib:$LD_RUN_PATH";
      export CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=TRUE";
      gcc -v && g++ -v;
      export AUDIODEV=null;
    fi
  - env
  - cd "$TRAVIS_BUILD_DIR/deps"
  - wget --no-verbose "http://ylvania.style.coocan.jp/file/elona122.zip"
  - unzip -qq elona122.zip
  - rm elona122.zip
  - cd "$TRAVIS_BUILD_DIR"
  - make clean
  - if [[ "$BUILD_TYPE" == "linux" ]]; then
      make tests VERBOSE=1;
    elif [[ "$BUILD_TYPE" == "osx" ]]; then
      make tests VERBOSE=1;
    fi
  - if [[ "$BUILD_TYPE" == "linux" ]]; then ccache --show-stats; fi

notifications:
  email: false
